{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/chart/chart.component.css","webpack:///./src/app/chart/chart.component.html","webpack:///./src/app/chart/chart.component.ts","webpack:///./src/app/dashboard/dashboard.component.css","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/form/form.component.css","webpack:///./src/app/form/form.component.html","webpack:///./src/app/form/form.component.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/loginform/loginform.component.css","webpack:///./src/app/loginform/loginform.component.html","webpack:///./src/app/loginform/loginform.component.ts","webpack:///./src/app/notification/notification.component.css","webpack:///./src/app/notification/notification.component.html","webpack:///./src/app/notification/notification.component.ts","webpack:///./src/app/sidebar/sidebar.component.css","webpack:///./src/app/sidebar/sidebar.component.html","webpack:///./src/app/sidebar/sidebar.component.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/userprofile/userprofile.component.css","webpack:///./src/app/userprofile/userprofile.component.html","webpack:///./src/app/userprofile/userprofile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n  <router-outlet></router-outlet>\\n \"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule,Routes} from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { CustomFormsModule } from 'ng2-validation';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { HttpModule } from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { SidebarComponent } from './sidebar/sidebar.component';\nimport { FormComponent } from './form/form.component';\nimport { LoginformComponent } from './loginform/loginform.component';\nimport { NotificationComponent } from './notification/notification.component';\nimport { isNavigationCancelingError } from '@angular/router/src/shared';\nimport { UserprofileComponent } from './userprofile/userprofile.component';\n\nimport { CookieService } from 'ngx-cookie-service';\nimport {FormBuilder,FormGroup, FormControl, Validators, NgForm, } from '@angular/forms';\nimport { SignupComponent } from './signup/signup.component';\nimport { ChartComponent } from './chart/chart.component';\n// import{CustomFormsModule } from 'ng2-validation';\n\n\nconst routes: Routes =\n\n[\n\n\n{\n\n  path: '' ,component : LoginformComponent,\n},\n{\n\n  path: 'dashboard' ,component : DashboardComponent,\nchildren:\n[\n  {\n\n    path: 'signup' ,component : SignupComponent,\n  },\n  {\n\n    path: 'createrole' ,component : FormComponent,\n  },\n  {\n\n    path: 'notification' ,component : NotificationComponent,\n  },\n  {\n\n    path: 'userprofile' ,component : UserprofileComponent,\n  },\n  {\n\n    path: 'chart' ,component : ChartComponent,\n  },\n]\n}\n]\n\n@NgModule({\n  declarations: [\n  AppComponent,\n HeaderComponent,\n DashboardComponent,\n SidebarComponent,\n FormComponent,\n  LoginformComponent,\n  NotificationComponent,\n  UserprofileComponent,\n  SignupComponent,\n  ChartComponent\n  \n    \n   \n  ],\n  imports: [\n    BrowserModule,\n  RouterModule.forRoot(routes ,{useHash: true}),\n  FormsModule, CustomFormsModule,\n  ReactiveFormsModule,         \n  HttpModule,HttpClientModule,\n  \n  ],\n  \n  providers: [HttpClient,HttpClientModule,CookieService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<p>\\n  chart works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-chart',\n  templateUrl: './chart.component.html',\n  styleUrls: ['./chart.component.css']\n})\nexport class ChartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<head>\\n\\n  \\n</head>\\n\\n<div id=\\\"wrapper\\\">\\n  <nav class=\\\"navbar navbar-default navbar-static-top\\\" role=\\\"navigation\\\" style=\\\"margin-bottom: 0\\\">\\n  <app-header></app-header>\\n  <app-sidebar></app-sidebar>\\n   </nav>\\n  </div>\\n\\n  <router-outlet></router-outlet>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(private http: HttpClient) { }\n\n  ngOnInit() {\n    return  this.http.post('http://localhost/mypro/index.php/My_controller/check_session',  {responseType: 'text'}).subscribe(res =>{\n    \n  });\n\n  }\n\n}\n","module.exports = \".red\\r\\n{\\r\\n\\r\\n    color:red;\\r\\n}\"","module.exports = \"<div id=\\\"page-wrapper\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n          <h1 class=\\\"page-header\\\">Create User</h1>\\n      </div>\\n      <!-- /.col-lg-12 -->\\n  </div>\\n  <!-- /.row -->\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"panel panel-default\\\">\\n\\n            <div class=\\\"panel-heading\\\">\\n                  User Registration Form     <span *ngIf= \\\"showSuccess()\\\" class=\\\"alert alert-success\\\">{{this.msg}}</span>\\n                                </div>\\n              <div class=\\\"panel-body\\\">\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-lg-12\\\">\\n                          <form role=\\\"form\\\" method=\\\"POST\\\" name=\\\"NgForm\\\" [formGroup]='signupform' (ngSubmit)='PostData(Userinfo)'>\\n                            \\n\\n                            <div class=\\\"row\\\">\\n                              <div class=\\\"col-lg-6\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label>Full Name</label>\\n                                    <input class=\\\"form-control\\\" #fname formControlName='full_name' ng-model=\\\"Userinfo.fname\\\">\\n                                    <div *ngIf=\\\"signupform.controls['full_name'].touched && !signupform.controls['full_name'].valid\\\">  \\n                                        <span class=\\\"red\\\" *ngIf=\\\"signupform.controls['full_name'].hasError('required') \\\">  \\n                                            Enter Your Full Name*\\n                                             </span>  </div>\\n                            </div>\\n                              </div>\\n                              <div class=\\\"col-lg-6\\\">\\n                              <div class=\\\"form-group\\\">\\n                                  <label>Email</label>\\n                                  <input class=\\\"form-control\\\" #email placeholder=\\\"Enter text\\\" formControlName='email' ng-model=\\\"Userinfo.email\\\">\\n                                  <div *ngIf=\\\"signupform.controls['email'].touched && !signupform.controls['email'].valid\\\">  \\n                                    <span class=\\\"red\\\" *ngIf=\\\"signupform.controls['email'].hasError('required') \\\">  \\n                                        This field is required*\\n                                         </span>  \\n                                 <span  class=\\\"red\\\" *ngIf=\\\"signupform.controls['email'].hasError('email') && !signupform.controls['email'].hasError('required')\\\">  \\n                                       Invalid Email ID  \\n                                        </span>  \\n                                </div> \\n                             \\n\\n                              </div>\\n                          </div>\\n                          </div>\\n                          <div class=\\\"row\\\">\\n                          <div class=\\\"col-lg-6\\\">\\n                                  <div class=\\\"form-group\\\">\\n                                      <label>Password</label>\\n                                      <input type=\\\"password\\\"#pass ng-model=\\\"Userinfo.pwd\\\"class=\\\"form-control\\\" formControlName='password' >\\n                                      <div *ngIf=\\\"signupform.controls['password'].touched && !signupform.controls['password'].valid\\\">  \\n                                        <span class=\\\"red\\\" *ngIf=\\\"signupform.controls['password'].hasError('required') \\\">  \\n                                            This field is required*\\n                                             </span>  \\n                                     \\n                                    </div>  \\n                                 \\n                                  </div>\\n                                  </div>\\n                                  <div class=\\\"col-lg-6\\\">\\n                                          <div class=\\\"form-group\\\">\\n                                              <label>Contact No.</label>\\n                                              <input class=\\\"form-control\\\" #contact ng-model=\\\"Userinfo.contact\\\"formControlName='contact_no' >\\n                                              <div *ngIf=\\\"signupform.controls['contact_no'].touched && !signupform.controls['contact_no'].valid\\\">  \\n                                                <span class=\\\"red\\\" *ngIf=\\\"signupform.controls['contact_no'].hasError('required') \\\">  \\n                                                    Please Enter Your Contact No*\\n                                                     </span>  </div>\\n                                          </div>\\n                                      </div>\\n</div>\\n<div class=\\\"row\\\">\\n                           <div class=\\\"col-lg-12\\\">                  \\n                              <div class=\\\"form-group\\\">\\n                                  <label>Address</label>\\n                                  <textarea class=\\\"form-control\\\"  #address rows=\\\"2\\\" formControlName='Address' ng-model=\\\"Userinfo.address\\\"></textarea>\\n                              </div>\\n                              </div>\\n                              <div class=\\\"col-lg-6\\\">\\n                                      <div class=\\\"form-group\\\">\\n                              <button type=\\\"submit\\\" class=\\\"btn btn-default\\\"    [disabled]=\\\"!signupform.valid\\\" >Submit Button</button>\\n                              <button type=\\\"reset\\\" class=\\\"btn btn-default\\\">Reset Button</button>\\n                              </div>\\n                              </div>\\n                              </div>\\n                          </form>\\n                      </div>\\n                     \\n                  </div>\\n                  <!-- /.row (nested) -->\\n              </div>\\n              <!-- /.panel-body -->\\n          </div>\\n          <!-- /.panel -->\\n      </div>\\n      <!-- /.col-lg-12 -->\\n  </div>\\n  <!-- /.row -->\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, FormControl, Validators, NgForm} from '@angular/forms';\nimport { Router, CanActivate,ActivatedRouteSnapshot,RouterStateSnapshot} from '@angular/router';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n\n@Component({\n  selector: 'app-form',\n  templateUrl: './form.component.html',\n  styleUrls: ['./form.component.css']\n})\nexport class FormComponent implements OnInit {\n\n\n  signupform: FormGroup;\n  \n  \npublic msg;\npublic success= false ;\n\n  constructor(private http: HttpClient,  private frmbuilder: FormBuilder,private router: Router) { \n  }\n\n  ngOnInit()  {\n\n    \n    this.signupform = this.frmbuilder.group({\n\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n      full_name:['',Validators.required],\n      contact_no:['',Validators.required],\n      Address:['']\n      \n      }); \n  }\n\n\n  PostData (){\n    // const email = signupform.controls.email.value;\n    // const full_name = signupform.controls.fname.value;\n    // const password = signupform.controls.pass.value;\n    // const contact_no = signupform.controls.contact.value;\n    // const address = signupform.controls.address.value;\n    // console.log(this.signupform.value);\n    \n  //  const data1 = { email :email,full_name: full_name,password:password,contact_no:contact_no ,address:address};\n  \n   this.http.post('http://localhost/mypro/index.php/My_controller/signup' ,this.signupform.value, {responseType: 'text'}).subscribe(res => {\n   var myJSON = JSON.parse(res);\n   if (myJSON>0)\n   {\n   this.msg=myJSON.info;\n   this.success=true;\n   }\n  // if(myJSON.info=='Duplicate Record')\n  // {\n\n  // } else if(myJSON.info=='Data Inserted')\n  // {\n\n  // }\n  // else\n  // {\n\n  // }\n  console.log(res);\n        return false;\n       });\n  \n      }\n  \n    }\n\n\n","module.exports = \"\"","module.exports = \"\\n  <div class=\\\"navbar-header\\\">\\n      <button type=\\\"button\\\" class=\\\"navbar-toggle\\\" data-toggle=\\\"collapse\\\" data-target=\\\".navbar-collapse\\\">\\n          <span class=\\\"sr-only\\\">Toggle navigation</span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n          <span class=\\\"icon-bar\\\"></span>\\n      </button>\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"index.html\\\">Construction Management</a>\\n  </div>\\n  <!-- /.navbar-header -->\\n\\n  <ul class=\\\"nav navbar-top-links navbar-right\\\">\\n      <li class=\\\"dropdown\\\">\\n          <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" routerLink=\\\"#\\\">\\n              <i class=\\\"fa fa-envelope fa-fw\\\"></i> <i class=\\\"fa fa-caret-down\\\"></i>\\n          </a>\\n          <ul class=\\\"dropdown-menu dropdown-messages\\\">\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <strong>John Smith</strong>\\n                          <span class=\\\"pull-right text-muted\\\">\\n                              <em>Yesterday</em>\\n                          </span>\\n                      </div>\\n                      <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eleifend...</div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <strong>John Smith</strong>\\n                          <span class=\\\"pull-right text-muted\\\">\\n                              <em>Yesterday</em>\\n                          </span>\\n                      </div>\\n                      <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eleifend...</div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <strong>John Smith</strong>\\n                          <span class=\\\"pull-right text-muted\\\">\\n                              <em>Yesterday</em>\\n                          </span>\\n                      </div>\\n                      <div>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque eleifend...</div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a class=\\\"text-center\\\" routerLink=\\\"#\\\">\\n                      <strong>Read All Messages</strong>\\n                      <i class=\\\"fa fa-angle-right\\\"></i>\\n                  </a>\\n              </li>\\n          </ul>\\n          <!-- /.dropdown-messages -->\\n      </li>\\n      <!-- /.dropdown -->\\n      <li class=\\\"dropdown\\\">\\n          <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" routerLink=\\\"#\\\">\\n              <i class=\\\"fa fa-tasks fa-fw\\\"></i> <i class=\\\"fa fa-caret-down\\\"></i>\\n          </a>\\n          <ul class=\\\"dropdown-menu dropdown-tasks\\\">\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <p>\\n                              <strong>Task 1</strong>\\n                              <span class=\\\"pull-right text-muted\\\">40% Complete</span>\\n                          </p>\\n                          <div class=\\\"progress progress-striped active\\\">\\n                              <div class=\\\"progress-bar progress-bar-success\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"40\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 40%\\\">\\n                                  <span class=\\\"sr-only\\\">40% Complete (success)</span>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <p>\\n                              <strong>Task 2</strong>\\n                              <span class=\\\"pull-right text-muted\\\">20% Complete</span>\\n                          </p>\\n                          <div class=\\\"progress progress-striped active\\\">\\n                              <div class=\\\"progress-bar progress-bar-info\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"20\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 20%\\\">\\n                                  <span class=\\\"sr-only\\\">20% Complete</span>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <p>\\n                              <strong>Task 3</strong>\\n                              <span class=\\\"pull-right text-muted\\\">60% Complete</span>\\n                          </p>\\n                          <div class=\\\"progress progress-striped active\\\">\\n                              <div class=\\\"progress-bar progress-bar-warning\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"60\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 60%\\\">\\n                                  <span class=\\\"sr-only\\\">60% Complete (warning)</span>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <p>\\n                              <strong>Task 4</strong>\\n                              <span class=\\\"pull-right text-muted\\\">80% Complete</span>\\n                          </p>\\n                          <div class=\\\"progress progress-striped active\\\">\\n                              <div class=\\\"progress-bar progress-bar-danger\\\" role=\\\"progressbar\\\" aria-valuenow=\\\"80\\\" aria-valuemin=\\\"0\\\" aria-valuemax=\\\"100\\\" style=\\\"width: 80%\\\">\\n                                  <span class=\\\"sr-only\\\">80% Complete (danger)</span>\\n                              </div>\\n                          </div>\\n                      </div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a class=\\\"text-center\\\" routerLink=\\\"#\\\">\\n                      <strong>See All Tasks</strong>\\n                      <i class=\\\"fa fa-angle-right\\\"></i>\\n                  </a>\\n              </li>\\n          </ul>\\n          <!-- /.dropdown-tasks -->\\n      </li>\\n      <!-- /.dropdown -->\\n      <li class=\\\"dropdown\\\">\\n          <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" routerLink=\\\"#\\\">\\n              <i class=\\\"fa fa-bell fa-fw\\\"></i> <i class=\\\"fa fa-caret-down\\\"></i>\\n          </a>\\n          <ul class=\\\"dropdown-menu dropdown-alerts\\\">\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <i class=\\\"fa fa-comment fa-fw\\\"></i> New Comment\\n                          <span class=\\\"pull-right text-muted small\\\">4 minutes ago</span>\\n                      </div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <i class=\\\"fa fa-twitter fa-fw\\\"></i> 3 New Followers\\n                          <span class=\\\"pull-right text-muted small\\\">12 minutes ago</span>\\n                      </div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <i class=\\\"fa fa-envelope fa-fw\\\"></i> Message Sent\\n                          <span class=\\\"pull-right text-muted small\\\">4 minutes ago</span>\\n                      </div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <i class=\\\"fa fa-tasks fa-fw\\\"></i> New Task\\n                          <span class=\\\"pull-right text-muted small\\\">4 minutes ago</span>\\n                      </div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a routerLink=\\\"#\\\">\\n                      <div>\\n                          <i class=\\\"fa fa-upload fa-fw\\\"></i> Server Rebooted\\n                          <span class=\\\"pull-right text-muted small\\\">4 minutes ago</span>\\n                      </div>\\n                  </a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li>\\n                  <a class=\\\"text-center\\\" routerLink=\\\"#\\\">\\n                      <strong>See All Alerts</strong>\\n                      <i class=\\\"fa fa-angle-right\\\"></i>\\n                  </a>\\n              </li>\\n          </ul>\\n          <!-- /.dropdown-alerts -->\\n      </li>\\n      <!-- /.dropdown -->\\n      <li class=\\\"dropdown\\\">\\n          <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" routerLink=\\\"#\\\">\\n              <i class=\\\"fa fa-user fa-fw\\\"></i> <i class=\\\"fa fa-caret-down\\\"></i>\\n          </a>\\n          <ul class=\\\"dropdown-menu dropdown-user\\\">\\n              <li><a routerLink=\\\"userprofile\\\"><i class=\\\"fa fa-user fa-fw\\\"></i> User Profile</a>\\n              </li>\\n              <li><a routerLink=\\\"#\\\"><i class=\\\"fa fa-gear fa-fw\\\"></i> Settings</a>\\n              </li>\\n              <li class=\\\"divider\\\"></li>\\n              <li><a (click)=\\\"logout();\\\"><i class=\\\"fa fa-sign-out fa-fw\\\"></i> Logout</a>\\n              </li>\\n          </ul>\\n          <!-- /.dropdown-user -->\\n      </li>\\n      <!-- /.dropdown -->\\n  </ul>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor(private http: HttpClient,private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  logout(){  \n   this.http.post('http://localhost/mypro/index.php/My_controller/logout', {responseType: 'text'}).subscribe(res =>{\n    this.router.navigateByUrl('');\n  }); \n  }\n}\n","module.exports = \".red\\r\\n{\\r\\n    color: red;\\r\\n}\\r\\n\\r\\n.green\\r\\n{\\r\\n    color: green;\\r\\n}\"","module.exports = \"\\n\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 col-md-offset-4\\\">\\n          <div class=\\\"login-panel panel panel-default\\\">\\n              <div class=\\\"panel-heading\\\">\\n                  <h3 class=\\\"panel-title\\\">Please Sign In</h3>\\n              </div>\\n              <div class=\\\"green\\\" *ngIf=\\\"successMsg\\\">\\n                    Please Check your mail for complete registration </div>\\n              <div class=\\\"panel-body\\\">\\n                    \\n                <form  #loginForm='ngForm' name=\\\"loginForm\\\">\\n                    <div class=\\\"login-form\\\">\\n                      <div class=\\\"section-field mb-10\\\">\\n                        <label class=\\\"mb-10\\\" for=\\\"name\\\">User name* </label>\\n                        \\n                        <span class=\\\"red\\\"  *ngIf=\\\"emailErrM\\\">\\n                         This field is required</span>\\n                          <input id=\\\"name\\\" class=\\\"web form-control\\\" type=\\\"text\\\"  #username1 [(ngModel)]=\\\"username\\\" placeholder=\\\"User name\\\" name=\\\"web\\\">\\n                       </div>\\n                       <div class=\\\"section-field mb-20\\\">\\n                        <label class=\\\"mb-10\\\" for=\\\"Password\\\">Password* </label><span class=\\\"red\\\"  *ngIf=\\\"passwordErrM\\\">\\n                         This field is required</span>\\n                          <input id=\\\"Password\\\" data-toggle=\\\"password\\\" class=\\\"Password form-control\\\"  [(ngModel)]=\\\"password\\\"   #password1 type=\\\"password\\\" placeholder=\\\"Password\\\" name=\\\"Password\\\">\\n                       </div>\\n                       <div class=\\\"section-field\\\">\\n                         <!-- <div class=\\\"remember-checkbox mb-30\\\">\\n                            <input type=\\\"checkbox\\\" class=\\\"form-control\\\"  [checked]=\\\"ischecked\\\"  [(ngModel)]=\\\"rememberme1\\\" #rememberme name=\\\"two\\\" id=\\\"two\\\" />\\n                            <label for=\\\"two\\\"> Remember me</label>  -->\\n                            <div class=\\\"checkbox\\\">\\n                                <label>\\n                                    <input name=\\\"remember\\\" type=\\\"checkbox\\\" value=\\\"Remember Me\\\"  [checked]=\\\"ischecked\\\"  [(ngModel)]=\\\"rememberme1\\\" #rememberme name=\\\"two\\\" id=\\\"two\\\" >Remember Me\\n                               \\n                                </label>\\n                                \\n                            <a  routerLink=\\\"/change-password\\\" class=\\\"pull-right\\\">Forgot Password?</a>\\n                           </div>\\n                         </div>\\n                         <!-- <a  style=\\\"cursor: pointer;\\\" (click)=\\\"getUserDetail(username1.value,password1.value,rememberme1)\\\" class=\\\"button border black small\\\">\\n                           <span>Log in</span>\\n                           <i class=\\\"fa fa-check\\\"></i>\\n                        </a> -->\\n                        <a (click)=\\\"getUserDetail(username1.value,password1.value,rememberme1)\\\"  class=\\\"btn btn-lg btn-success btn-block\\\">Login</a>\\n\\n                        <!-- <span class=\\\"red\\\"  *ngIf=\\\"emailvalidation\\\">\\n                         Invalid username\\n                         </span>\\n                         <span class=\\\"red\\\"  *ngIf=\\\"passwordValidation\\\">\\n                             Invalid Password\\n                             </span>\\n                              -->\\n                      </div>\\n             </form>\\n              </div>\\n          </div>\\n      </div>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, FormControl, Validators, NgForm} from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HttpModule } from '@angular/http';\nimport {RouterModule,Routes} from '@angular/router';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { config } from 'rxjs';\n\n\n\n@Component({\n  selector: 'app-loginform',\n  templateUrl: './loginform.component.html',\n  styleUrls: ['./loginform.component.css']\n})\n\nexport class LoginformComponent implements OnInit {\n\n  // email: string;\n  loginForm: FormGroup;\n\n  public emailvalidation;\n  public passwordValidation;\n  public ischecked : boolean;\n  public  rememberme1;\n   \n  status = {\n  };\n  \n   password = this.cookieService.get('password');\n   username = this.cookieService.get('email');\n   public isVisible = false;\n   public emailErrM;\n   public passwordErrM;\n   public errCount;\n   cookieValue = 'UNKNOWN';\n\n\n  constructor(private http: HttpClient,  private frmbuilder: FormBuilder,private router: Router,private cookieService: CookieService) { \n}\n  \n\n  ngOnInit() {\n\n  \n  }\n\ngetUserDetail(email, password, rememberme) {\n  this.emailErrM = false;\n  this.isVisible = false;\n  this.passwordErrM = false;\n  this.errCount = 0;\n  \n  if (email == '') \n  \n  {\n   this.emailErrM = true;\n   this.errCount++;\n  }\n  if (password == '') {\n   this.passwordErrM = true;\n   this.errCount++;\n  }\n  if (rememberme) {\n    this.cookieService.set( 'email', email );\n    this.cookieService.set( 'password', password );\n  } else {\n    this.cookieService.set( 'email', '' );\n    this.cookieService.set( 'password', '' );\n  }\n  if (this.errCount == 0) {\n    const data1 = { email : email, password: password };\n      // this.http.post('login/', data1).subscribe(res => \n      \n      return  this.http.post('http://localhost/mypro/index.php/My_controller/login',data1,  {responseType: 'text'}).subscribe(res =>{\n      console.log(res);  \n      var myJSON = JSON.parse(res);\n         if (myJSON.info=='Login SuccessFull') {\n          this.router.navigateByUrl('/dashboard');\n           } \n     else {\n    alert(myJSON.info);\n    }});}}}  \n","module.exports = \"\"","module.exports = \"<div id=\\\"page-wrapper\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-12\\\">\\n          <h1 class=\\\"page-header\\\">Notifications</h1>\\n      </div>\\n      <!-- /.col-lg-12 -->\\n  </div>\\n  <!-- /.row -->\\n  <div class=\\\"row\\\">\\n    \\n      <!-- /.col-lg-6 -->\\n      <div class=\\\"col-lg-12\\\">\\n          <div class=\\\"panel panel-default\\\">\\n              <div class=\\\"panel-heading\\\">\\n                  Dismissable Alerts\\n              </div>\\n              <!-- /.panel-heading -->\\n              <div class=\\\"panel-body\\\">\\n                  <div class=\\\"alert alert-success alert-dismissable\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\">&times;</button>\\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit. <a href=\\\"#\\\" class=\\\"alert-link\\\">Alert Link</a>.\\n                  </div>\\n                  <div class=\\\"alert alert-info alert-dismissable\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\">&times;</button>\\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit. <a href=\\\"#\\\" class=\\\"alert-link\\\">Alert Link</a>.\\n                  </div>\\n                  <div class=\\\"alert alert-warning alert-dismissable\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\">&times;</button>\\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit. <a href=\\\"#\\\" class=\\\"alert-link\\\">Alert Link</a>.\\n                  </div>\\n                  <div class=\\\"alert alert-danger alert-dismissable\\\">\\n                      <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"alert\\\" aria-hidden=\\\"true\\\">&times;</button>\\n                      Lorem ipsum dolor sit amet, consectetur adipisicing elit. <a href=\\\"#\\\" class=\\\"alert-link\\\">Alert Link</a>.\\n                  </div>\\n              </div>\\n              <!-- .panel-body -->\\n          </div>\\n          <!-- /.panel -->\\n      </div>\\n      <!-- /.col-lg-6 -->\\n  </div>\\n\\n  <!-- /.row -->\\n</div> \"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-notification',\n  templateUrl: './notification.component.html',\n  styleUrls: ['./notification.component.css']\n})\nexport class NotificationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"navbar-default sidebar\\\" role=\\\"navigation\\\">\\n    <div class=\\\"sidebar-nav navbar-collapse\\\">\\n        <ul class=\\\"nav\\\" id=\\\"side-menu\\\">\\n            <li class=\\\"sidebar-search\\\">\\n                <div class=\\\"input-group custom-search-form\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Search...\\\">\\n                    <span class=\\\"input-group-btn\\\">\\n                    <button class=\\\"btn btn-default\\\" type=\\\"button\\\">\\n                        <i class=\\\"fa fa-search\\\"></i>\\n                    </button>\\n                </span>\\n                </div>\\n                <!-- /input-group -->\\n            </li>\\n            <li>\\n                <a routerLink=\\\"/dashboard\\\"><i class=\\\"fa fa-dashboard fa-fw\\\"></i> Dashboard</a>\\n            </li>\\n            <li>\\n                <a routerLink=\\\"#\\\"><i class=\\\"fa fa-user-md   fa-fw\\\">\\n\\n                </i> Create User<span class=\\\"fa arrow\\\"></span></a>\\n                <ul class=\\\"nav nav-second-level\\\">\\n                    <li>\\n                        <a routerLink=\\\"createrole\\\">Manager</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"createrole\\\">Supervisors</a>\\n                  \\n                </ul>\\n                <!-- /.nav-second-level -->\\n            </li>\\n            <li>\\n                <a routerLink=\\\"#\\\"><i class=\\\"fa fa-table fa-fw\\\"></i>Manage Report\\n                    <span class=\\\"fa arrow\\\"></span></a>\\n                <ul class=\\\"nav nav-second-level\\\">\\n                    <li>\\n                        <a routerLink=\\\"signup\\\">Create Report</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"createrole\\\">Submit Report</a>\\n                  </li>\\n\\n                  <li>\\n                    <a routerLink=\\\"createrole\\\">View Report</a>\\n              </li>\\n                </ul>\\n                \\n            </li>\\n            <li>\\n                <a routerLink=\\\"viewchart\\\"><i class=\\\"fa fa-bar-chart-o   fa-fw\\\">\\n\\n                </i> View Chart<span class=\\\"fa arrow\\\"></span></a></li>\\n            <li>\\n                <a routerLink=\\\"notification\\\"><i class=\\\"fa fa-edit fa-fw\\\"></i> Notifications<span class=\\\"fa arrow\\\"></span></a>\\n            </li>\\n            <li>\\n                <a routerLink=\\\"#\\\"><i class=\\\"fa fa-money fa-fw\\\"></i>Project Financial Status<span class=\\\"fa arrow\\\"></span></a>\\n                <ul class=\\\"nav nav-second-level\\\">\\n                    <li>\\n                        <a routerLink=\\\"panels-wells.html\\\">Total Budget</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"buttons.html\\\">Total Expanse</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"notifications.html\\\">Total Remaning</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"typography.html\\\">Overall Details</a>\\n                    </li>\\n                   \\n                </ul>\\n\\n                <!-- /.nav-second-level -->\\n            </li>\\n            <li>\\n                <a routerLink=\\\"#\\\"><i class=\\\"fa fa-signal fa-fw\\\"></i>Project Status<span class=\\\"fa arrow\\\"></span></a>\\n                <ul class=\\\"nav nav-second-level\\\">\\n                    <li>\\n                        <a routerLink=\\\"panels-wells.html\\\">Project Deadline</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"buttons.html\\\">Pending Work</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"notifications.html\\\">Complete Work</a>\\n                    </li>\\n                   \\n                </ul>\\n\\n                <!-- /.nav-second-level -->\\n            </li>\\n            <li>\\n                <a routerLink=\\\"#\\\"><i class=\\\"fa fa-sitemap fa-fw\\\"></i> Multi-Level Dropdown<span class=\\\"fa arrow\\\"></span></a>\\n                <ul class=\\\"nav nav-second-level\\\">\\n                    <li>\\n                        <a routerLink=\\\"#\\\">Second Level Item</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"#\\\">Second Level Item</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"#\\\">Third Level <span class=\\\"fa arrow\\\"></span></a>\\n                        <ul class=\\\"nav nav-third-level\\\">\\n                            <li>\\n                                <a routerLink=\\\"#\\\">Third Level Item</a>\\n                            </li>\\n                            <li>\\n                                <a routerLink=\\\"#\\\">Third Level Item</a>\\n                            </li>\\n                            <li>\\n                                <a routerLink=\\\"#\\\">Third Level Item</a>\\n                            </li>\\n                            <li>\\n                                <a routerLink=\\\"#\\\">Third Level Item</a>\\n                            </li>\\n                        </ul>\\n                        <!-- /.nav-third-level -->\\n                    </li>\\n                </ul>\\n                <!-- /.nav-second-level -->\\n            </li>\\n            <li>\\n                <a routerLink=\\\"#\\\"><i class=\\\"fa fa-files-o fa-fw\\\"></i> Sample Pages<span class=\\\"fa arrow\\\"></span></a>\\n                <ul class=\\\"nav nav-second-level\\\">\\n                    <li>\\n                        <a routerLink=\\\"blank.html\\\">Blank Page</a>\\n                    </li>\\n                    <li>\\n                        <a routerLink=\\\"login.html\\\">Login Page</a>\\n                    </li>\\n                </ul>\\n                <!-- /.nav-second-level -->\\n            </li>\\n        </ul>\\n    </div>\\n    <!-- /.sidebar-collapse -->\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: ['./sidebar.component.css']\n})\nexport class SidebarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"wrapper\\\">\\n\\n  <div class=\\\"parallax gray-bg page-section-ptb\\\">\\n  \\n   \\n  <!--=================================\\n   login-->\\n  \\n  <section class=\\\"section-transparent page-section-pb\\\">\\n    <div class=\\\"container\\\">\\n       <div class=\\\"row\\\">\\n         <div class=\\\"col-md-6 col-md-offset-3\\\">\\n         <div class=\\\"text-center\\\">\\n             <h3>Registration</h3>\\n          </div>\\n         <div class=\\\"divider\\\"></div><br>\\n          <div class=\\\"login-bg clearfix\\\">\\n             <div class=\\\"red\\\" *ngIf=\\\"uniqueEmailErrM\\\">\\n                Please check your Email, You have already registered, you need to Complete your Full registration,<a  (click)=\\\"sendMail(signupForm)\\\" style=\\\"cursor:pointer\\\">(Click here to resend mail)</a>\\n  <!-- This email address is already registered with Datanyze. To log in to your account, please <a  routerLink=\\\"/login\\\">click here </a>  You can also reset your password <a  routerLink=\\\"/change-password\\\" >here    </a> -->\\n         </div>\\n             \\n             <div class=\\\"green\\\" *ngIf=\\\"successMsg\\\">\\n                Please Check your mail for complete registration </div>\\n               <h6 class=\\\" mb-0\\\">Enter a company email address to get started:</h6>\\n              <form ng-form=\\\"registration\\\" method=\\\"POST\\\" name=\\\"reg_form\\\" [formGroup]='signupForm' (ngSubmit)=\\\"PostData(email.value)\\\">\\n                \\n               <div class=\\\"login-form\\\" ng-app=\\\"\\\">\\n                 <div class=\\\"section-field mb-20\\\">\\n                   <!-- <label class=\\\"mb-10\\\" for=\\\"name\\\">Company Email* </label><span class=\\\"red\\\"  *ngIf=\\\"EmailErrM\\\">\\n                    This field is required</span> -->\\n                     <input id=\\\"email\\\" ng-model=\\\"email\\\" #email   name=\\\"email\\\" formControlName='email'  class=\\\"web form-control\\\" type=\\\"text\\\" placeholder=\\\"User name\\\" name=\\\"web\\\">\\n                     <!-- <div *ngIf=\\\"signupForm.controls['email'].touched && !signupForm.controls['email'].valid\\\">  \\n                        <span class=\\\"red\\\" *ngIf=\\\"signupForm.controls['email'].hasError('required') \\\">  \\n                            This field is required\\n                             </span>  \\n                     <span  class=\\\"red\\\" *ngIf=\\\"signupForm.controls['email'].hasError('email') && !signupForm.controls['email'].hasError('required')\\\">  \\n                           Invalid Email ID  \\n                            </span>  \\n                    </div>   -->\\n                    </div>\\n                    <input type=\\\"Submit\\\" class=\\\"button border black small\\\" value=\\\"Create Free Account\\\" [disabled]='!signupForm.valid' >  \\n                    \\n                 </div>\\n                 \\n                 </form>\\n                <div class=\\\"login-social text-center clearfix\\\">\\n                  \\n                  <p>Already have a Datanyze account? Please <a routerLink=\\\"/login\\\">log in here.</a></p>\\n                </div>\\n             </div>\\n             \\n          </div>\\n        </div>\\n    </div>\\n  </section>\\n  \\n  <!--=================================\\n   login-->\\n  \\n   </div>\\n  </div>\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router, CanActivate,ActivatedRouteSnapshot,RouterStateSnapshot} from '@angular/router';\nimport {FormBuilder, FormGroup, FormControl, Validators, NgForm} from '@angular/forms';\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\n\nexport class SignupComponent implements OnInit  {\n\n  signupForm: FormGroup;\n  email: string;\n\n\n  constructor( private http: HttpClient, private router: Router, private frmbuilder: FormBuilder) {}\n  public EmailErrM;\n  public uniqueEmailErrM;\n  public successMsg;\n  ngOnInit() {\n  this.signupForm = this.frmbuilder.group({\n    email: new FormControl(),\n    });\n    this.signupForm = this.frmbuilder.group({\n     email: ['', [Validators.required, Validators.email]],\n    });\n}\nsendMail(signupForm: NgForm)\n\n{ \n const email = signupForm.controls.email.value;\n  const data1 = { email : email };\n\n  this.http.post('login/sendmail', data1).subscribe(res => {\n   const CountData = Object.keys(res);\n     this.successMsg = true;\n     this.EmailErrM = false;\n     this.uniqueEmailErrM = false;\n        setTimeout(() => {\n         this.router.navigateByUrl('/login');\n    }, 6000);\n       return false;\n      });\n}\n\n\nPostData(email) {\n  // const email = signupForm.controls.email.value;\n  // const full_name = signupForm.controls.full_name.value;\n  // const password = signupForm.controls.passord.value;\n  // const contact_no = signupForm.controls.contact_no.value;\n  // const address = signupForm.controls.address.value;\n  this.EmailErrM = false;\n  // tslint:disable-next-line:triple-equals\n  if (email == '') \n  {\n    this.EmailErrM = true;\n    this.successMsg = false;\n  }\n  \n  else {\n const data1 = { email : email };\nthis.http.post('http://localhost/mypro/index.php/My_controller/signup',data1).subscribe(res => {\nconst CountData = Object.keys(res);\nconsole.log(res);\n\nif (res['code']  ==  'ER_DUP_ENTRY') {\n        this.uniqueEmailErrM = true;\n    } else if (CountData.length > 0 ) {\n       this.successMsg = true;\n       setTimeout(() => {\n        this.router.navigateByUrl('/login');\n   }, 6000);\n     } else {\n     this.router.navigateByUrl('/');\n     }\n      return false;\n     });\n   }\n}\n}\n\n","module.exports = \"\"","module.exports = \"<br><br>\\n <div id=\\\"page-wrapper\\\">\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-lg-12\\\">\\n      <div class=\\\"panel panel-default\\\">\\n          <div class=\\\"panel-heading\\\">\\n              Hover Rows\\n          </div>\\n          <!-- /.panel-heading -->\\n          <div class=\\\"panel-body\\\">\\n              <div class=\\\"table-responsive\\\">\\n                  <table class=\\\"table table-hover\\\">\\n                      <thead>\\n                          <tr>\\n                              <th>#</th>\\n                              <th>First Name</th>\\n                              <th>Last Name</th>\\n                              <th>Username</th>\\n                          </tr>\\n                      </thead>\\n                      <tbody>\\n                          <tr>\\n                              <td>1</td>\\n                              <td>Mark</td>\\n                              <td>Otto</td>\\n                              <td>@mdo</td>\\n                          </tr>\\n                          <tr>\\n                              <td>2</td>\\n                              <td>Jacob</td>\\n                              <td>Thornton</td>\\n                              <td>@fat</td>\\n                          </tr>\\n                          <tr>\\n                              <td>3</td>\\n                              <td>Larry</td>\\n                              <td>the Bird</td>\\n                              <td>@twitter</td>\\n                          </tr>\\n                      </tbody>\\n                  </table>\\n              </div>\\n              <!-- /.table-responsive -->\\n          </div>\\n          <!-- /.panel-body -->\\n      </div>\\n      <!-- /.panel -->\\n  </div>\\n  \\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-userprofile',\n  templateUrl: './userprofile.component.html',\n  styleUrls: ['./userprofile.component.css']\n})\nexport class UserprofileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}